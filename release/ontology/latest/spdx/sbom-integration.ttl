# === PREFIXES ================================================================

# --- Basic ---
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

# --- Ontology management ---
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix prov: <http://www.w3.org/ns/prov#> .

# --- SPDX ---
@prefix spdx: <https://spdx.org/rdf/3.0.1/terms/> .

# --- DSCDO ---
@prefix dscdo: <https://vocab.earth616.localhost/ont/> .
@prefix : <https://vocab.earth616.localhost/ont/> .
@base <https://vocab.earth616.localhost/ont/> .

# === SPDX SBOM INTEGRATION MODULE ==========================================

# --- Module Metadata ---
<https://vocab.earth616.localhost/ont/modules/spdx/sbom-integration> rdf:type owl:Ontology ;
    rdfs:label "DSCDO SPDX SBOM Integration Module"@en ;
    rdfs:comment "Integrates SPDX 3.0.1 Software Bill of Materials (SBOM) concepts with DSCDO workflow ontology for container-based AI agent provenance tracking."@en ;
    dcterms:creator <https://orcid.org/0000-0003-4091-6059> ;
    dcterms:created "2025-01-25"^^xsd:date ;
    dcterms:modified "2025-01-25"^^xsd:date ;
    owl:versionInfo "0.1.0" ;
    owl:imports <https://spdx.org/rdf/3.0.1/terms/> ;
    owl:imports <https://vocab.earth616.localhost/ont/modules/core/event> ;
    rdfs:seeAlso <https://spdx.github.io/spdx-spec/v3.0.1/> .

# === PROPERTY EXTENSIONS ====================================================

# --- Container SBOM Property ---
dscdo:containerSbom rdf:type owl:ObjectProperty ;
    rdfs:label "container SBOM"@en ;
    rdfs:comment "Links a workflow execution to the Software Bill of Materials (SBOM) describing the container runtime environment and its software components."@en ;
    rdfs:domain dscdo:InformationExtractionWorkflow ;
    rdfs:range spdx:Sbom ;
    rdfs:subPropertyOf prov:used ;
    skos:definition "A property that associates a containerized workflow with its SBOM, providing full software provenance for compliance and security analysis."@en ;
    skos:example "An AI document processing workflow references the SBOM of its container image containing Python, transformers library, and other dependencies."@en .

# --- Workflow Software Agent Extension ---
dscdo:dependsOnPackage rdf:type owl:ObjectProperty ;
    rdfs:label "depends on package"@en ;
    rdfs:comment "Indicates that a software agent or workflow depends on a specific software package for its execution."@en ;
    rdfs:domain [ owl:unionOf ( prov:SoftwareAgent dscdo:InformationExtractionWorkflow ) ] ;
    rdfs:range spdx:Package ;
    rdfs:subPropertyOf prov:used ;
    skos:definition "Establishes explicit dependencies between DSCDO workflows/agents and SPDX software packages."@en .

# --- SBOM Creation Attribution ---
dscdo:sbomGeneratedBy rdf:type owl:ObjectProperty ;
    rdfs:label "SBOM generated by"@en ;
    rdfs:comment "Links an SBOM to the tool or agent that generated it, extending SPDX creation info with DSCDO agent concepts."@en ;
    rdfs:domain spdx:Sbom ;
    rdfs:range [ owl:unionOf ( prov:SoftwareAgent dscdo:SoftwareAgent ) ] ;
    rdfs:subPropertyOf prov:wasGeneratedBy ;
    skos:definition "Tracks which scanning tools, container runtimes, or AI agents were responsible for generating SBOM data."@en .

# === CLASS ALIGNMENTS =======================================================

# --- Enhanced Workflow Class ---
dscdo:InformationExtractionWorkflow rdfs:subClassOf [
    rdf:type owl:Restriction ;
    owl:onProperty dscdo:containerSbom ;
    owl:maxCardinality 1 ;
    rdfs:comment "A workflow may reference at most one container SBOM"@en
] .

# --- Software Agent Enhancement ---
prov:SoftwareAgent rdfs:subClassOf [
    rdf:type owl:Restriction ;
    owl:onProperty dscdo:dependsOnPackage ;
    owl:allValuesFrom spdx:Package ;
    rdfs:comment "Software agents may depend on zero or more SPDX packages"@en
] .

# === AXIOMS & RULES =========================================================

# --- SBOM Provenance Alignment ---
# If a workflow uses a container SBOM, and that SBOM contains packages,
# then the workflow transitively depends on those packages
[ rdf:type owl:Class ;
  owl:equivalentClass [
    rdf:type owl:Restriction ;
    owl:onProperty [
      owl:propertyChainAxiom ( dscdo:containerSbom spdx:hasElement )
    ] ;
    owl:someValuesFrom spdx:Package
  ]
] rdfs:subClassOf [
  rdf:type owl:Restriction ;
  owl:onProperty dscdo:dependsOnPackage ;
  owl:someValuesFrom spdx:Package
] .

# === ANNOTATIONS FOR LLM DISCOVERY =========================================

# --- OPLaX Pattern Metadata ---
dscdo:containerSbom skos:broader "software provenance pattern"@en ;
    dcterms:subject "container security"@en, "software supply chain"@en, "SBOM"@en ;
    rdfs:seeAlso <https://www.cisa.gov/sbom> .

# --- Usage Examples ---
dscdo:SbomIntegrationPattern rdf:type skos:Concept ;
    rdfs:label "SBOM Integration Pattern"@en ;
    skos:definition "Design pattern for integrating SPDX Software Bills of Materials with workflow provenance tracking in containerized AI systems."@en ;
    skos:broader dscdo:ProvenancePattern ;
    skos:related spdx:Sbom, dscdo:InformationExtractionWorkflow ;
    skos:example """
    {
      "@type": "InformationExtractionWorkflow",
      "containerSbom": {
        "@type": "Sbom",
        "hasElement": [
          {"@type": "Package", "packageName": "python", "packageVersion": "3.11.7"},
          {"@type": "Package", "packageName": "transformers", "packageVersion": "4.36.0"}
        ]
      }
    }
    """@en .