@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <http://schema.org/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .

# --- Standard Vocabularies ---
@prefix time: <http://www.w3.org/2006/time#> .

# --- DSCDO (environment-specific namespace) ---
@prefix dscdo: <${ONTOLOGY_BASE}/> .
@prefix : <${ONTOLOGY_BASE}/> .
@base <${ONTOLOGY_BASE}/> .

# --- AMMO Ontology Reference ---
@prefix ammo: <https://w3id.org/ammo/ont/> .

# =============================================================================
# State Transition Module
# =============================================================================

<${ONTOLOGY_BASE}/modules/design/transition> rdf:type owl:Ontology ;
    rdfs:label "State Transition Module"@en ;
    rdfs:comment "Provides formal state modeling and transition tracking for supply chain entities. Enables explicit state representation and transition validation with temporal constraints. Derived from AMMO ontology state and transition patterns."@en ;
    owl:versionInfo "1.0" ;
    dcterms:created "2025-01-29"^^xsd:date ;
    dcterms:creator <https://orcid.org/0000-0003-4091-6059> ;
    
    # === Module Dependencies ===
    owl:imports <${ONTOLOGY_BASE}/modules/core/event> ;
    owl:imports <${ONTOLOGY_BASE}/modules/traceability/tru> ;
    owl:imports <${ONTOLOGY_BASE}/patterns/SpatioTemporalExtent> ;
    
    # === AMMO Provenance ===
    dcterms:source <https://w3id.org/ammo/ont/> ;
    rdfs:seeAlso <https://la3d.github.io/ammo/> ;
    skos:note "State transition patterns derived from AMMO Transition and temporal modeling classes."@en .

# =============================================================================
# STATE MODELING
# =============================================================================

dscdo:State rdf:type rdfs:Class ;
    rdfs:label "State"@en ;
    rdfs:comment "A condition or mode of being that an entity can exist in at a particular point in time. States are discrete and mutually exclusive."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "A discrete condition or configuration that characterizes an entity at a specific time"@en ;
    skos:example "Raw material state, In-process state, Completed state, Shipped state, Installed state"@en ;
    
    # === AMMO Provenance ===
    dcterms:source ammo:State ;
    skos:exactMatch ammo:State ;
    skos:note "Derived from AMMO State class for entity condition modeling"@en .

dscdo:ProcessState rdf:type rdfs:Class ;
    rdfs:subClassOf dscdo:State ;
    rdfs:label "Process State"@en ;
    rdfs:comment "A state that represents a particular phase or condition within a process or workflow."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "A state specific to process phases and workflow conditions"@en ;
    skos:example "Manufacturing state, Quality control state, Assembly state, Testing state"@en .

dscdo:MaterialState rdf:type rdfs:Class ;
    rdfs:subClassOf dscdo:State ;
    rdfs:label "Material State"@en ;
    rdfs:comment "A state that represents the condition or phase of a material or substance."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "A state describing material conditions and phases"@en ;
    skos:example "Solid state, Liquid state, Powder state, Molten state, Cured state"@en .

dscdo:LifecycleState rdf:type rdfs:Class ;
    rdfs:subClassOf dscdo:State ;
    rdfs:label "Lifecycle State"@en ;
    rdfs:comment "A state that represents a phase in the lifecycle of a traceable resource unit or component."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "A state representing lifecycle phases for supply chain entities"@en ;
    skos:example "Designed, Manufactured, Tested, Delivered, Deployed, Maintained, Retired"@en .

# =============================================================================
# TRANSITION MODELING
# =============================================================================

dscdo:Transition rdf:type rdfs:Class ;
    rdfs:label "Transition"@en ;
    rdfs:comment "A change from one state to another, occurring over a specific time interval and potentially triggered by events or conditions."@en ;
    rdfs:subClassOf [
        a owl:Restriction ;
        owl:onProperty dscdo:transitionDuring ;
        owl:someValuesFrom time:ProperInterval
    ] ;
    rdfs:subClassOf [
        a owl:Restriction ;
        owl:onProperty dscdo:fromState ;
        owl:cardinality "1"^^xsd:nonNegativeInteger
    ] ;
    rdfs:subClassOf [
        a owl:Restriction ;
        owl:onProperty dscdo:toState ;
        owl:cardinality "1"^^xsd:nonNegativeInteger
    ] ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "A state change process with defined source and target states"@en ;
    skos:example "Raw material to in-process transition, Testing to approved transition, Manufacturing to quality control transition"@en ;
    
    # === AMMO Provenance ===
    dcterms:source ammo:Transition ;
    skos:exactMatch ammo:Transition ;
    skos:note "Derived from AMMO Transition class for state change modeling"@en .

dscdo:fromState rdf:type owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:domain dscdo:Transition ;
    rdfs:range dscdo:State ;
    rdfs:label "from state"@en ;
    rdfs:comment "The initial state before a transition occurs. Each transition has exactly one source state."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "Links transitions to their source states"@en ;
    
    # === AMMO Provenance ===
    dcterms:source ammo:fromState ;
    skos:exactMatch ammo:fromState ;
    skos:note "Derived from AMMO fromState with functional property constraint"@en .

dscdo:toState rdf:type owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:domain dscdo:Transition ;
    rdfs:range dscdo:State ;
    rdfs:label "to state"@en ;
    rdfs:comment "The target state after a transition occurs. Each transition has exactly one target state."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "Links transitions to their target states"@en ;
    
    # === AMMO Provenance ===
    dcterms:source ammo:toState ;
    skos:exactMatch ammo:toState ;
    skos:note "Derived from AMMO toState with functional property constraint"@en .

dscdo:hasTransition rdf:type owl:ObjectProperty ;
    rdfs:range dscdo:Transition ;
    rdfs:label "has transition"@en ;
    rdfs:comment "Indicates that an entity undergoes a specific state transition."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "Links entities to the transitions they undergo"@en ;
    
    # === AMMO Provenance ===
    dcterms:source ammo:hasTransition ;
    skos:exactMatch ammo:hasTransition ;
    skos:note "Derived from AMMO hasTransition property"@en .

# =============================================================================
# STATE TRACKING PROPERTIES
# =============================================================================

dscdo:currentState rdf:type owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:range dscdo:State ;
    rdfs:label "current state"@en ;
    rdfs:comment "The current state of an entity at the present time. Each entity has exactly one current state."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "Links entities to their present state"@en .

dscdo:stateHistory rdf:type owl:ObjectProperty ;
    rdfs:range dscdo:StateOccurrence ;
    rdfs:label "state history"@en ;
    rdfs:comment "Links an entity to its historical state occurrences, providing a complete state timeline."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "Connects entities to their state history records"@en .

dscdo:StateOccurrence rdf:type rdfs:Class ;
    rdfs:label "State Occurrence"@en ;
    rdfs:comment "A specific instance of an entity being in a particular state during a defined time interval."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "A timestamped record of an entity being in a specific state"@en ;
    skos:example "Component was in 'Testing' state from 2024-03-15 to 2024-03-16"@en .

dscdo:occurrenceState rdf:type owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:domain dscdo:StateOccurrence ;
    rdfs:range dscdo:State ;
    rdfs:label "occurrence state"@en ;
    rdfs:comment "The specific state associated with a state occurrence."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "Links state occurrences to their specific states"@en .

dscdo:occurrenceInterval rdf:type owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:domain dscdo:StateOccurrence ;
    rdfs:range time:ProperInterval ;
    rdfs:subPropertyOf time:hasTime ;
    rdfs:label "occurrence interval"@en ;
    rdfs:comment "The time interval during which the state occurrence was active, using W3C Time ontology."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "Links state occurrences to their temporal intervals using W3C Time"@en .

# =============================================================================
# Temporal Properties for Transitions
# =============================================================================

dscdo:transitionDuring
    a owl:ObjectProperty ;
    rdfs:label "transition during"@en ;
    rdfs:comment "The time interval during which a state transition occurs."@en ;
    rdfs:subPropertyOf time:hasTime ;
    rdfs:domain dscdo:Transition ;
    rdfs:range time:ProperInterval ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> .

dscdo:transitionStartsAt
    a owl:ObjectProperty ;
    rdfs:label "transition starts at"@en ;
    rdfs:comment "The instant when a state transition begins."@en ;
    rdfs:subPropertyOf time:hasBeginning ;
    rdfs:domain dscdo:Transition ;
    rdfs:range time:Instant ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> .

dscdo:transitionEndsAt
    a owl:ObjectProperty ;
    rdfs:label "transition ends at"@en ;
    rdfs:comment "The instant when a state transition completes."@en ;
    rdfs:subPropertyOf time:hasEnd ;
    rdfs:domain dscdo:Transition ;
    rdfs:range time:Instant ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> .

dscdo:transitionDuration
    a owl:DatatypeProperty ;
    rdfs:label "transition duration"@en ;
    rdfs:comment "The duration of a state transition as an XSD duration."@en ;
    rdfs:subPropertyOf time:hasXSDDuration ;
    rdfs:domain dscdo:Transition ;
    rdfs:range xsd:duration ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> .

# =============================================================================
# TRANSITION EVENTS
# =============================================================================

dscdo:StateTransitionEvent rdf:type rdfs:Class ;
    rdfs:subClassOf dscdo:SupplyChainEvent ;
    rdfs:label "State Transition Event"@en ;
    rdfs:comment "A supply chain event that represents a state transition for one or more entities."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "An event that triggers or records state changes"@en ;
    skos:example "Quality approval event, Manufacturing completion event, Shipping initiation event"@en .

dscdo:triggersTransition rdf:type owl:ObjectProperty ;
    rdfs:domain dscdo:StateTransitionEvent ;
    rdfs:range dscdo:Transition ;
    rdfs:label "triggers transition"@en ;
    rdfs:comment "Indicates that an event causes a specific state transition to occur."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "Links events to the transitions they cause"@en .

dscdo:transitionSubject rdf:type owl:ObjectProperty ;
    rdfs:domain dscdo:StateTransitionEvent ;
    rdfs:label "transition subject"@en ;
    rdfs:comment "The entity or entities that undergo the state transition during this event."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "Links transition events to the entities changing state"@en .

# =============================================================================
# TRU STATE INTEGRATION
# =============================================================================

# Extend TraceableResourceUnit with state tracking

dscdo:StatefulTRU rdf:type rdfs:Class ;
    rdfs:subClassOf dscdo:TraceableResourceUnit ;
    rdfs:label "Stateful TRU"@en ;
    rdfs:comment "A traceable resource unit with explicit state tracking throughout its lifecycle."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "A TRU with formal state management and transition tracking"@en ;
    skos:example "Steel component TRU with states: Raw → Machined → Tested → Approved → Shipped"@en .

# Add state properties to TRU
dscdo:TraceableResourceUnit rdfs:subClassOf [
    rdf:type owl:Restriction ;
    owl:onProperty dscdo:currentState ;
    owl:maxCardinality 1 ;
    rdfs:comment "TRUs may have at most one current state"@en
] .

# =============================================================================
# WORKFLOW STATE PATTERNS
# =============================================================================

dscdo:WorkflowState rdf:type rdfs:Class ;
    rdfs:subClassOf dscdo:ProcessState ;
    rdfs:label "Workflow State"@en ;
    rdfs:comment "A state that represents a step or phase within a defined workflow or process sequence."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "A state representing workflow phases and process steps"@en ;
    skos:example "Pending approval, In review, Approved, Rejected, On hold"@en .

dscdo:WorkflowTransition rdf:type rdfs:Class ;
    rdfs:subClassOf dscdo:Transition ;
    rdfs:label "Workflow Transition"@en ;
    rdfs:comment "A transition that moves a workflow or process from one step to the next."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "A transition specific to workflow progression"@en ;
    skos:example "Submit for review transition, Approval transition, Rejection transition"@en .

dscdo:transitionCondition rdf:type owl:DatatypeProperty ;
    rdfs:domain dscdo:WorkflowTransition ;
    rdfs:range xsd:string ;
    rdfs:label "transition condition"@en ;
    rdfs:comment "A condition that must be satisfied for the workflow transition to occur."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "Textual description of conditions required for transition"@en ;
    skos:example "All tests pass, Manager approval received, Quality criteria met"@en .

dscdo:transitionAction rdf:type owl:DatatypeProperty ;
    rdfs:domain dscdo:WorkflowTransition ;
    rdfs:range xsd:string ;
    rdfs:label "transition action"@en ;
    rdfs:comment "An action that occurs as part of the workflow transition."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/transition> ;
    skos:definition "Textual description of actions performed during transition"@en ;
    skos:example "Send notification, Update database, Generate certificate, Schedule inspection"@en .

# =============================================================================
# EXAMPLES AND USAGE PATTERNS
# =============================================================================

# === Example Lifecycle States ===
<${ONTOLOGY_BASE}/examples/states/raw-material>
    rdf:type dscdo:LifecycleState ;
    rdfs:label "Raw Material State"@en ;
    rdfs:comment "Initial state for materials before processing"@en ;
    
    schema:description "Material is in its raw, unprocessed form ready for manufacturing" ;
    
    # AMMO provenance
    dcterms:source ammo:State ;
    skos:exactMatch ammo:State .

<${ONTOLOGY_BASE}/examples/states/in-process>
    rdf:type dscdo:ProcessState ;
    rdfs:label "In Process State"@en ;
    rdfs:comment "State indicating active manufacturing or processing"@en ;
    
    schema:description "Material or component is currently undergoing processing or manufacturing" .

<${ONTOLOGY_BASE}/examples/states/quality-approved>
    rdf:type dscdo:LifecycleState ;
    rdfs:label "Quality Approved State"@en ;
    rdfs:comment "State indicating successful quality validation"@en ;
    
    schema:description "Component has passed all quality checks and is approved for use" .

# === Example Transition ===
<${ONTOLOGY_BASE}/examples/transitions/manufacturing-completion>
    rdf:type dscdo:WorkflowTransition ;
    rdfs:label "Manufacturing Completion Transition"@en ;
    rdfs:comment "Transition from in-process to quality control state"@en ;
    
    dscdo:fromState <${ONTOLOGY_BASE}/examples/states/in-process> ;
    dscdo:toState <${ONTOLOGY_BASE}/examples/states/quality-control> ;
    
    dscdo:transitionCondition "Manufacturing process completed according to specifications" ;
    dscdo:transitionAction "Move component to quality control queue, Update tracking system" ;
    
    # AMMO provenance
    dcterms:source ammo:Transition ;
    skos:exactMatch ammo:Transition .

# === Example Stateful TRU ===
<${ONTOLOGY_BASE}/examples/stateful-tru/steel-component-001>
    rdf:type dscdo:StatefulTRU ;
    rdfs:label "Steel Component 001 - Stateful TRU"@en ;
    rdfs:comment "Steel component with full state tracking"@en ;
    
    # Base TRU properties
    dscdo:hasIdentifier [
        rdf:type dscdo:Identifier ;
        schema:value "SC-001-2024" ;
        schema:propertyID "ComponentSerial" ;
        schema:name "Steel Component Serial Number"
    ] ;
    
    # Current state
    dscdo:currentState <${ONTOLOGY_BASE}/examples/states/quality-approved> ;
    
    # State history
    dscdo:stateHistory [
        rdf:type dscdo:StateOccurrence ;
        dscdo:occurrenceState <${ONTOLOGY_BASE}/examples/states/raw-material> ;
        dscdo:occurrenceInterval [
            rdf:type dscdo:SpatioTemporalExtent ;
            schema:startDate "2024-03-15T08:00:00Z" ;
            schema:endDate "2024-03-15T12:00:00Z"
        ]
    ] , [
        rdf:type dscdo:StateOccurrence ;
        dscdo:occurrenceState <${ONTOLOGY_BASE}/examples/states/in-process> ;
        dscdo:occurrenceInterval [
            rdf:type dscdo:SpatioTemporalExtent ;
            schema:startDate "2024-03-15T12:00:00Z" ;
            schema:endDate "2024-03-16T14:00:00Z"
        ]
    ] ;
    
    # Recent transition
    dscdo:hasTransition <${ONTOLOGY_BASE}/examples/transitions/manufacturing-completion> .

# === Example State Transition Event ===
<${ONTOLOGY_BASE}/examples/events/quality-approval-event>
    rdf:type dscdo:StateTransitionEvent ;
    rdfs:label "Quality Approval Event"@en ;
    rdfs:comment "Event representing quality approval state transition"@en ;
    
    dscdo:triggersTransition [
        rdf:type dscdo:Transition ;
        dscdo:fromState <${ONTOLOGY_BASE}/examples/states/quality-control> ;
        dscdo:toState <${ONTOLOGY_BASE}/examples/states/quality-approved>
    ] ;
    
    dscdo:transitionSubject <${ONTOLOGY_BASE}/examples/stateful-tru/steel-component-001> ;
    
    dscdo:hasSpatioTemporalExtent [
        rdf:type dscdo:SpatioTemporalExtent ;
        schema:startDate "2024-03-16T14:00:00Z" ;
        schema:endDate "2024-03-16T14:15:00Z" ;
        schema:location [
            rdf:type schema:Place ;
            schema:name "Quality Control Station 2"
        ]
    ] .

# =============================================================================
# STATE TRANSITION GUIDELINES
# =============================================================================

<${ONTOLOGY_BASE}/design/transition-guidelines>
    rdf:type owl:NamedIndividual, skos:ConceptScheme ;
    rdfs:label "State Transition Guidelines"@en ;
    dcterms:description "Guidelines for modeling state transitions in Earth616 ontology"@en ;
    skos:note """
    State Transition Usage Guidelines:
    
    1. State Modeling:
       - Use State for general entity conditions
       - Use ProcessState for workflow phases
       - Use MaterialState for material conditions
       - Use LifecycleState for supply chain phases
    
    2. Transition Constraints:
       - fromState and toState are functional properties (exactly one each)
       - Transitions should be logically valid (valid state progressions)
       - Include transition conditions and actions for workflow transitions
    
    3. State Tracking:
       - Use currentState for present entity state
       - Use stateHistory for complete state timeline
       - Create StateOccurrence records with temporal intervals
    
    4. TRU Integration:
       - Use StatefulTRU for TRUs requiring state tracking
       - Integrate state transitions with supply chain events
       - Maintain state history for audit and compliance
    
    5. Event Integration:
       - Use StateTransitionEvent for events causing state changes
       - Link events to specific transitions via triggersTransition
       - Identify entities changing state via transitionSubject
    
    6. AMMO Provenance:
       - State and Transition classes derive from AMMO
       - Maintain dcterms:source references
       - Preserve AMMO semantic patterns for state modeling
    
    7. Validation Patterns:
       - Ensure state consistency (no impossible transitions)
       - Validate temporal ordering of state occurrences
       - Check transition condition satisfaction
    """@en .