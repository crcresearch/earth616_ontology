@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <http://schema.org/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .

# --- DSCDO (environment-specific namespace) ---
@prefix dscdo: <${ONTOLOGY_BASE}/> .
@prefix : <${ONTOLOGY_BASE}/> .
@base <${ONTOLOGY_BASE}/> .

# --- AMMO Ontology Reference ---
@prefix ammo: <https://w3id.org/ammo/ont/> .

# =============================================================================
# Design Composition Module
# =============================================================================

<${ONTOLOGY_BASE}/modules/design/composition> rdf:type owl:Ontology ;
    rdfs:label "Design Composition Module"@en ;
    rdfs:comment "Provides classes and properties for modeling design specifications, system designs, and their relationships to physical objects. Derived from AMMO ontology design patterns for defense supply chain applications."@en ;
    owl:versionInfo "1.0" ;
    dcterms:created "2025-01-29"^^xsd:date ;
    dcterms:creator <https://orcid.org/0000-0003-4091-6059> ;
    
    # === Module Dependencies ===
    owl:imports <${ONTOLOGY_BASE}/modules/core/event> ;
    owl:imports <${ONTOLOGY_BASE}/modules/core/identifier> ;
    
    # === AMMO Provenance ===
    dcterms:source <https://w3id.org/ammo/ont/> ;
    rdfs:seeAlso <https://la3d.github.io/ammo/> ;
    skos:note "Design patterns derived from AMMO (Additive Manufacturing for Maintenance Operations) ontology, adapted for defense supply chain traceability and documentation."@en .

# =============================================================================
# CORE DESIGN CLASSES
# =============================================================================

dscdo:Design rdf:type rdfs:Class ;
    rdfs:label "Design"@en ;
    rdfs:comment "A plan or specification for the construction of an object, system, or process. Represents the abstract blueprint that guides physical implementation."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/composition> ;
    skos:definition "An abstract plan or blueprint that specifies how to construct, assemble, or implement a physical or conceptual entity"@en ;
    skos:example "Engineering drawings for a defense component, software architecture for a supply chain system, assembly instructions for a traceable resource unit"@en ;
    
    # === AMMO Provenance ===
    dcterms:source ammo:Design ;
    skos:exactMatch ammo:Design ;
    skos:note "Derived from AMMO Design class: 'A plan or specification for the construction of an object or system'"@en .

dscdo:DesignSpecification rdf:type rdfs:Class ;
    rdfs:subClassOf dscdo:InformationObject ;
    rdfs:label "Design Specification"@en ;
    rdfs:comment "A detailed document that sets out exactly what a product, system, or process should present. Contains specific requirements, constraints, and implementation details."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/composition> ;
    skos:definition "A formal document containing detailed requirements and constraints that must be satisfied by a design implementation"@en ;
    skos:example "Technical specification document for steel alloy composition, CAD file with dimensional tolerances, quality control checklist for manufacturing process"@en ;
    
    # === AMMO Provenance ===
    dcterms:source ammo:DesignSpecification ;
    skos:exactMatch ammo:DesignSpecification ;
    skos:note "Derived from AMMO DesignSpecification: 'detailed document that sets out exactly what a product or process should present'"@en .

dscdo:SystemDesign rdf:type rdfs:Class ;
    rdfs:subClassOf dscdo:Design ;
    rdfs:label "System Design"@en ;
    rdfs:comment "A design that describes the architecture, components, modules, interfaces, and data flow for a system to satisfy specified requirements."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/composition> ;
    skos:definition "A comprehensive design that specifies system structure, component relationships, and functional requirements"@en ;
    skos:example "Defense system architecture, supply chain workflow design, integrated manufacturing system blueprint"@en ;
    
    # === AMMO Provenance ===
    dcterms:source ammo:SystemDesign ;
    skos:exactMatch ammo:SystemDesign ;
    skos:note "Derived from AMMO SystemDesign class for comprehensive system-level design specifications"@en .

dscdo:ComponentDesign rdf:type rdfs:Class ;
    rdfs:subClassOf dscdo:Design ;
    rdfs:label "Component Design"@en ;
    rdfs:comment "A design that specifies the structure, properties, and behavior of an individual component within a larger system."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/composition> ;
    skos:definition "A design focused on a specific component, including its interfaces, requirements, and implementation details"@en ;
    skos:example "Design for a steel bracket component, specification for an electronic module, blueprint for a mechanical assembly"@en ;
    
    # === AMMO Provenance ===
    dcterms:source ammo:Design ;
    skos:closeMatch ammo:Design ;
    skos:note "Specialized from AMMO Design class for component-level design specifications"@en .

# =============================================================================
# DESIGN RELATIONSHIPS AND PROPERTIES
# =============================================================================

# === Design-to-Specification Properties ===

dscdo:hasDesignSpecification rdf:type owl:ObjectProperty ;
    rdfs:domain dscdo:Design ;
    rdfs:range dscdo:DesignSpecification ;
    rdfs:label "has design specification"@en ;
    rdfs:comment "Links a design to one or more detailed specifications that define its requirements and constraints."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/composition> ;
    skos:definition "Connects a design to the formal specifications that detail its implementation requirements"@en ;
    
    # === AMMO Provenance ===
    dcterms:source ammo:hasProperPart ;
    skos:relatedMatch ammo:hasProperPart ;
    skos:note "Derived from AMMO hasProperPart relationship between Design and DesignSpecification"@en .

dscdo:isDesignSpecificationOf rdf:type owl:ObjectProperty ;
    owl:inverseOf dscdo:hasDesignSpecification ;
    rdfs:domain dscdo:DesignSpecification ;
    rdfs:range dscdo:Design ;
    rdfs:label "is design specification of"@en ;
    rdfs:comment "Indicates that this specification defines requirements for a particular design."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/composition> ;
    skos:definition "Inverse property linking specifications back to the designs they define"@en .

# === Design-to-Object Properties ===

dscdo:describes rdf:type owl:ObjectProperty ;
    rdfs:domain dscdo:Design ;
    rdfs:label "describes"@en ;
    rdfs:comment "Indicates that a design provides the blueprint or specification for a physical or conceptual entity."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/composition> ;
    skos:definition "Links a design to the entities it specifies or blueprints"@en ;
    
    # === AMMO Provenance ===
    dcterms:source ammo:describes ;
    skos:exactMatch ammo:describes ;
    skos:note "Derived from AMMO describes property linking designs to components"@en .

dscdo:isDescribedBy rdf:type owl:ObjectProperty ;
    owl:inverseOf dscdo:describes ;
    rdfs:range dscdo:Design ;
    rdfs:label "is described by"@en ;
    rdfs:comment "Indicates that an entity is specified or blueprinted by a particular design."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/composition> ;
    skos:definition "Links entities back to the designs that specify them"@en ;
    
    # === AMMO Provenance ===
    dcterms:source ammo:isDescribedBy ;
    skos:exactMatch ammo:isDescribedBy ;
    skos:note "Derived from AMMO isDescribedBy inverse property"@en .

# === Specification Properties ===

dscdo:specifies rdf:type owl:ObjectProperty ;
    rdfs:domain dscdo:DesignSpecification ;
    rdfs:label "specifies"@en ;
    rdfs:comment "Indicates that a design specification defines requirements or constraints for a particular entity."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/composition> ;
    skos:definition "Links specifications to the entities they define requirements for"@en ;
    
    # === AMMO Provenance ===
    dcterms:source ammo:specifies ;
    skos:exactMatch ammo:specifies ;
    skos:note "Derived from AMMO specifies property linking DesignSpecification to components"@en .

dscdo:isSpecifiedBy rdf:type owl:ObjectProperty ;
    owl:inverseOf dscdo:specifies ;
    rdfs:range dscdo:DesignSpecification ;
    rdfs:label "is specified by"@en ;
    rdfs:comment "Indicates that an entity is defined or constrained by a particular design specification."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/composition> ;
    skos:definition "Links entities back to the specifications that define their requirements"@en .

# =============================================================================
# DESIGN VERSIONING AND LIFECYCLE
# =============================================================================

dscdo:DesignVersion rdf:type rdfs:Class ;
    rdfs:label "Design Version"@en ;
    rdfs:comment "A specific version or revision of a design, enabling tracking of design evolution and change management."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/composition> ;
    skos:definition "A timestamped version of a design that supports version control and change tracking"@en ;
    skos:example "Version 2.1 of missile component design, Revision C of manufacturing process specification"@en ;
    
    # === AMMO Provenance ===
    skos:note "Extension of AMMO design patterns to support version control and design evolution tracking"@en .

dscdo:hasVersion rdf:type owl:ObjectProperty ;
    rdfs:domain dscdo:Design ;
    rdfs:range dscdo:DesignVersion ;
    rdfs:label "has version"@en ;
    rdfs:comment "Links a design to its specific versions or revisions."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/composition> ;
    skos:definition "Connects designs to their versioned instances"@en .

dscdo:versionNumber rdf:type owl:DatatypeProperty ;
    rdfs:domain dscdo:DesignVersion ;
    rdfs:range xsd:string ;
    rdfs:label "version number"@en ;
    rdfs:comment "The version identifier for a design version (e.g., '2.1', 'Rev C', 'v1.0.3')."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/composition> ;
    skos:definition "Alphanumeric identifier for a specific version of a design"@en .

dscdo:supersedes rdf:type owl:ObjectProperty ;
    rdfs:domain dscdo:DesignVersion ;
    rdfs:range dscdo:DesignVersion ;
    rdfs:label "supersedes"@en ;
    rdfs:comment "Indicates that one design version replaces or updates a previous version."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/composition> ;
    skos:definition "Links newer design versions to the versions they replace"@en .

# =============================================================================
# INTEGRATION WITH TRU AND SUPPLY CHAIN
# =============================================================================

# === TRU Design Properties ===

dscdo:implementsDesign rdf:type owl:ObjectProperty ;
    rdfs:domain dscdo:TraceableResourceUnit ;
    rdfs:range dscdo:Design ;
    rdfs:label "implements design"@en ;
    rdfs:comment "Indicates that a traceable resource unit is manufactured or assembled according to a specific design."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/composition> ;
    skos:definition "Links TRUs to the designs they implement or conform to"@en ;
    skos:example "Steel component TRU implements Design XYZ-2024-001"@en .

dscdo:conformsToSpecification rdf:type owl:ObjectProperty ;
    rdfs:domain dscdo:TraceableResourceUnit ;
    rdfs:range dscdo:DesignSpecification ;
    rdfs:label "conforms to specification"@en ;
    rdfs:comment "Indicates that a traceable resource unit meets the requirements defined in a design specification."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/composition> ;
    skos:definition "Links TRUs to the specifications they satisfy"@en ;
    skos:example "Manufactured component conforms to military specification MIL-STD-810"@en .

# === Event Design Properties ===

dscdo:executesDesign rdf:type owl:ObjectProperty ;
    rdfs:domain dscdo:SupplyChainEvent ;
    rdfs:range dscdo:Design ;
    rdfs:label "executes design"@en ;
    rdfs:comment "Indicates that a supply chain event follows or implements a specific design or process plan."@en ;
    rdfs:isDefinedBy <${ONTOLOGY_BASE}/modules/design/composition> ;
    skos:definition "Links events to the designs or process plans they execute"@en ;
    skos:example "Manufacturing event executes assembly design plan"@en .

# =============================================================================
# EXAMPLES AND USAGE PATTERNS
# =============================================================================

# === Example Design Instance ===
<${ONTOLOGY_BASE}/examples/designs/steel-component-design-001>
    rdf:type dscdo:ComponentDesign ;
    rdfs:label "Steel Component Design 001"@en ;
    rdfs:comment "Design specification for precision steel component used in defense applications"@en ;
    
    dscdo:hasDesignSpecification [
        rdf:type dscdo:DesignSpecification ;
        rdfs:label "Steel Component Technical Specification" ;
        schema:name "Technical Specification Document TC-001-2024" ;
        schema:description "Detailed specifications for steel alloy composition, dimensional tolerances, and surface finish requirements"
    ] ;
    
    dscdo:hasVersion [
        rdf:type dscdo:DesignVersion ;
        dscdo:versionNumber "2.1" ;
        dcterms:created "2024-03-15T10:00:00Z"^^xsd:dateTime ;
        dcterms:creator "Defense Engineering Division"
    ] ;
    
    # AMMO provenance
    dcterms:source ammo:Design ;
    skos:exactMatch ammo:Design ;
    
    schema:additionalProperty [
        rdf:type schema:PropertyValue ;
        schema:propertyID "AMMO_Design_Pattern" ;
        schema:value "ammo:Design" ;
        schema:description "Implemented using AMMO design composition patterns"
    ] .

# === Example System Design ===
<${ONTOLOGY_BASE}/examples/designs/missile-system-design>
    rdf:type dscdo:SystemDesign ;
    rdfs:label "Missile System Design"@en ;
    rdfs:comment "Comprehensive system design for guided missile assembly including all subsystems and components"@en ;
    
    dscdo:describes <${ONTOLOGY_BASE}/examples/systems/guided-missile-system> ;
    
    dscdo:hasDesignSpecification [
        rdf:type dscdo:DesignSpecification ;
        schema:name "Missile System Requirements Document" ;
        schema:description "System-level requirements including performance, reliability, and integration specifications"
    ] ;
    
    # AMMO provenance
    dcterms:source ammo:SystemDesign ;
    skos:exactMatch ammo:SystemDesign .

# =============================================================================
# DESIGN COMPOSITION GUIDELINES
# =============================================================================

<${ONTOLOGY_BASE}/design/composition-guidelines>
    rdf:type owl:NamedIndividual, skos:ConceptScheme ;
    rdfs:label "Design Composition Guidelines"@en ;
    dcterms:description "Guidelines for using design composition patterns in Earth616 ontology"@en ;
    skos:note """
    Design Composition Usage Guidelines:
    
    1. Design Hierarchy:
       - Use Design for abstract blueprints
       - Use ComponentDesign for individual part specifications
       - Use SystemDesign for comprehensive system architectures
    
    2. Specification Patterns:
       - Link designs to specifications using hasDesignSpecification
       - Use DesignSpecification for formal requirement documents
       - Connect specifications to TRUs via conformsToSpecification
    
    3. Version Management:
       - Track design evolution using DesignVersion
       - Use supersedes to link version sequences
       - Include versionNumber for clear identification
    
    4. TRU Integration:
       - Use implementsDesign to link TRUs to their blueprints
       - Use conformsToSpecification for compliance tracking
       - Connect manufacturing events via executesDesign
    
    5. AMMO Provenance:
       - All classes include dcterms:source to AMMO
       - Use skos:exactMatch for direct correspondences
       - Preserve AMMO design pattern semantics
    """@en .